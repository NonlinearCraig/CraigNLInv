(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_1_0_6 () Real)
(declare-fun l_1_0_5 () Real)
(declare-fun l_1_0_4 () Real)
(declare-fun l_1_0_11 () Real)
(declare-fun l_1_0_10 () Real)
(declare-fun l_1_0_1 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_1_0_9 () Real)
(declare-fun l_1_0_8 () Real)
(declare-fun l_1_0_7 () Real)
(declare-fun l_1_0_3 () Real)
(declare-fun l_1_0_2 () Real)
(declare-fun _a_1_ () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_1_1_9 () Real)
(declare-fun l_1_1_7 () Real)
(declare-fun l_1_1_3 () Real)
(declare-fun l_1_1_2 () Real)
(declare-fun l_1_1_16 () Real)
(declare-fun l_1_1_15 () Real)
(declare-fun l_1_1_11 () Real)
(declare-fun l_1_1_10 () Real)
(declare-fun l_1_1_6 () Real)
(declare-fun l_1_1_4 () Real)
(declare-fun l_1_1_1 () Real)
(declare-fun l_1_1_5 () Real)
(declare-fun l_1_1_17 () Real)
(declare-fun l_1_1_8 () Real)
(declare-fun l_1_1_14 () Real)
(declare-fun l_1_1_13 () Real)
(declare-fun l_1_1_12 () Real)
(declare-fun l_1_2_9 () Real)
(declare-fun l_1_2_6 () Real)
(declare-fun l_1_2_4 () Real)
(declare-fun l_1_2_3 () Real)
(declare-fun l_1_2_17 () Real)
(declare-fun l_1_2_16 () Real)
(declare-fun l_1_2_12 () Real)
(declare-fun l_1_2_11 () Real)
(declare-fun l_1_2_10 () Real)
(declare-fun l_1_2_8 () Real)
(declare-fun l_1_2_7 () Real)
(declare-fun l_1_2_1 () Real)
(declare-fun l_1_2_5 () Real)
(declare-fun l_1_2_2 () Real)
(declare-fun l_1_2_15 () Real)
(declare-fun l_1_2_14 () Real)
(declare-fun l_1_2_13 () Real)
(assert
 (let ((?x590 (* 2.0 l_1_0_4)))
 (let ((?x591 (* l_1_0_11 l_1_0_11)))
 (let ((?x589 (+ (+ (- (- (+ _a_0_ l_1_0_1) (* l_1_0_10 l_1_0_10)) ?x591) ?x590) l_1_0_5)))
 (= (+ ?x589 l_1_0_6) 0.0)))))
(assert
 (let ((?x517 (* l_1_0_9 l_1_0_9)))
 (let ((?x520 (* 3.0 l_1_0_6)))
 (let ((?x530 (* 3.0 l_1_0_5)))
 (let ((?x528 (* 9.0 l_1_0_4)))
 (let ((?x531 (- (- (- (- (- _a_1_ (* 3.0 l_1_0_1)) l_1_0_2) l_1_0_3) ?x528) ?x530)))
 (= (- (- (- (- ?x531 ?x520) l_1_0_7) l_1_0_8) ?x517) 0.0)))))))
(assert
 (let ((?x375 (* 2.0 l_1_0_6)))
 (let ((?x373 (* 2.0 l_1_0_5)))
 (let ((?x215 (* 12.0 l_1_0_4)))
 (let ((?x370 (- (- _a_2_ (* 2.0 l_1_0_1)) (* (* 2.0 l_1_0_10) l_1_0_9))))
 (= (- (- (- ?x370 ?x215) ?x373) ?x375) 0.0))))))
(assert
 (= (* 4.0 l_1_0_4) 0.0))
(assert
 (= (- l_1_0_4) 0.0))
(assert
 (>= l_1_0_1 0.0))
(assert
 (>= l_1_0_2 0.0))
(assert
 (>= l_1_0_3 0.0))
(assert
 (>= l_1_0_4 0.0))
(assert
 (>= l_1_0_5 0.0))
(assert
 (>= l_1_0_6 0.0))
(assert
 (>= l_1_0_7 0.0))
(assert
 (>= l_1_0_8 0.0))
(assert
 (>= l_1_0_9 0.0))
(assert
 (>= l_1_0_11 0.0))
(assert
 (let ((?x219 (* (/ 3.0 2.0) l_1_1_7)))
 (let ((?x288 (* 21.0 l_1_1_2)))
 (let ((?x180 (* (/ 3.0 2.0) l_1_1_11)))
 (let ((?x280 (* (/ 3.0 2.0) l_1_1_10)))
 (let ((?x311 (* _a_2_ l_1_1_6)))
 (let ((?x309 (* _a_2_ l_1_1_4)))
 (let ((?x307 (* _a_2_ l_1_1_1)))
 (let ((?x312 (- (- (- (* (* (* (- 2.0) _a_1_) _a_2_) l_1_1_5) ?x307) ?x309) ?x311)))
 (let ((?x208 (- (- (+ (+ ?x312 ?x280) ?x180) (* (* 2.0 l_1_1_15) l_1_1_16)) ?x288)))
 (let ((?x220 (+ (- ?x208 (* l_1_1_3 (- (* (- (/ 3.0 2.0)) _a_1_) (* 7.0 _a_2_)))) ?x219)))
 (let ((?x225 (+ (- ?x220 (* l_1_1_9 (- (* (- (/ 3.0 2.0)) _a_1_) (* 7.0 _a_2_)))) 8.0)))
 (= ?x225 0.0)))))))))))))
(assert
 (let ((?x409 (* (/ 47.0 4.0) l_1_1_2)))
 (let ((?x414 (* l_1_1_17 l_1_1_17)))
 (let ((?x411 (* l_1_1_16 l_1_1_16)))
 (let ((?x48 (* _a_0_ l_1_1_6)))
 (let ((?x401 (- (- (- (* (- _a_0_) l_1_1_1) (* _a_0_ l_1_1_4)) ?x48) l_1_1_10)))
 (let ((?x435 (- (+ (- (- (- ?x401 l_1_1_11) ?x411) ?x414) ?x409) (* l_1_1_3 (- (+ (* (- 7.0) _a_0_) _a_1_) (* (/ 3.0 2.0) _a_2_))))))
 (let ((?x434 (- ?x435 (* l_1_1_5 (+ (* (* 2.0 _a_0_) _a_1_) (* _a_2_ _a_2_))))))
 (let ((?x104 (- (- ?x434 l_1_1_7) (* l_1_1_9 (- (+ (* (- 7.0) _a_0_) _a_1_) (* (/ 3.0 2.0) _a_2_))))))
 (= (- ?x104 1.0) 0.0))))))))))
(assert
 (let ((?x506 (* 7.0 l_1_1_7)))
 (let ((?x295 (* 49.0 l_1_1_2)))
 (let ((?x291 (* l_1_1_15 l_1_1_15)))
 (let ((?x315 (* 7.0 l_1_1_11)))
 (let ((?x155 (* 7.0 l_1_1_10)))
 (let ((?x159 (* _a_1_ l_1_1_6)))
 (let ((?x157 (* _a_1_ l_1_1_4)))
 (let ((?x158 (- (+ (* (- _a_1_) l_1_1_1) (* (* 7.0 _a_1_) l_1_1_3)) ?x157)))
 (let ((?x318 (+ (+ (+ (- ?x158 ?x159) (* (* 7.0 _a_1_) l_1_1_9)) ?x155) ?x315)))
 (let ((?x505 (- (- (- (- (- (- ?x318 l_1_1_12) l_1_1_13) l_1_1_14) ?x291) ?x295) (* (* l_1_1_5 _a_1_) _a_1_))))
 (= (- (- (+ ?x505 ?x506) l_1_1_8) 15.0) 0.0))))))))))))
(assert
 (let ((?x483 (- (+ (* (* (* (- 2.0) _a_0_) _a_2_) l_1_1_5) (* 3.0 l_1_1_2)) (* l_1_1_3 (+ (* (- (/ 3.0 2.0)) _a_0_) _a_2_)))))
 (= (- ?x483 (* l_1_1_9 (+ (* (- (/ 3.0 2.0)) _a_0_) _a_2_))) 0.0)))
(assert
 (let ((?x463 (- (- (- (* (- _a_0_) l_1_1_3) (* _a_0_ l_1_1_9)) l_1_1_2) (* (* l_1_1_5 _a_0_) _a_0_))))
 (= ?x463 0.0)))
(assert
 (>= l_1_1_1 0.0))
(assert
 (>= l_1_1_2 0.0))
(assert
 (>= l_1_1_3 0.0))
(assert
 (>= l_1_1_4 0.0))
(assert
 (>= l_1_1_5 0.0))
(assert
 (>= l_1_1_6 0.0))
(assert
 (>= l_1_1_7 0.0))
(assert
 (>= l_1_1_8 0.0))
(assert
 (>= l_1_1_9 0.0))
(assert
 (>= l_1_1_10 0.0))
(assert
 (>= l_1_1_11 0.0))
(assert
 (>= l_1_1_12 0.0))
(assert
 (>= l_1_1_13 0.0))
(assert
 (>= l_1_1_14 0.0))
(assert
 (>= l_1_1_15 0.0))
(assert
 (>= l_1_1_17 0.0))
(assert
 (let ((?x608 (* l_1_2_17 l_1_2_17)))
 (let ((?x606 (* l_1_2_16 l_1_2_16)))
 (let ((?x598 (* (/ 47.0 4.0) l_1_2_10)))
 (let ((?x596 (* (/ 3.0 50.0) _a_2_)))
 (let ((?x593 (* (/ 529.0 625.0) _a_0_)))
 (let ((?x56 (* _a_0_ l_1_2_8)))
 (let ((?x594 (+ (- (- (* (- _a_0_) l_1_2_1) (* _a_0_ l_1_2_7)) ?x56) ?x593)))
 (let ((?x605 (- (+ (+ (+ ?x594 ?x596) ?x598) l_1_2_11) (* l_1_2_12 (+ (- (* 7.0 _a_0_) _a_1_) (* (/ 3.0 2.0) _a_2_))))))
 (let ((?x613 (- (+ (+ (- (- ?x605 ?x606) ?x608) l_1_2_3) l_1_2_4) (* l_1_2_6 (+ (- (* 7.0 _a_0_) _a_1_) (* (/ 3.0 2.0) _a_2_))))))
 (let ((?x615 (- ?x613 (* l_1_2_9 (+ (* (* 2.0 _a_0_) _a_1_) (* _a_2_ _a_2_))))))
 (= ?x615 0.0))))))))))))
(assert
 (let ((?x710 (* (/ 37.0 2500.0) _a_0_)))
 (let ((?x668 (* _a_0_ l_1_2_6)))
 (let ((?x634 (* _a_0_ l_1_2_12)))
 (let ((?x708 (+ ?x634 ?x668)))
 (= (- (- (- ?x708 ?x710) l_1_2_10) (* (* l_1_2_9 _a_0_) _a_0_)) 0.0))))))
(assert
 (let ((?x740 (* 3.0 l_1_2_10)))
 (let ((?x738 (* (/ 1.0 100.0) _a_2_)))
 (let ((?x739 (- (+ (* (* (* (- 2.0) _a_0_) _a_2_) l_1_2_9) (* (/ 69.0 625.0) _a_0_)) ?x738)))
 (let ((?x747 (- (- (+ ?x739 ?x740) (* l_1_2_12 (- (* (/ 3.0 2.0) _a_0_) _a_2_))) (* l_1_2_6 (- (* (/ 3.0 2.0) _a_0_) _a_2_)))))
 (= ?x747 0.0))))))
(assert
 (= (* (/ 1.0 10000.0) _a_0_) 0.0))
(assert
 (= (* (- (/ 3.0 2500.0)) _a_0_) 0.0))
(assert
 (let ((?x823 (* 7.0 l_1_2_4)))
 (let ((?x821 (* 7.0 l_1_2_3)))
 (let ((?x818 (* l_1_2_15 l_1_2_15)))
 (let ((?x814 (* 7.0 l_1_2_11)))
 (let ((?x812 (* 49.0 l_1_2_10)))
 (let ((?x809 (* _a_1_ l_1_2_8)))
 (let ((?x807 (* _a_1_ l_1_2_7)))
 (let ((?x806 (- (- (* (- _a_1_) l_1_2_1) (* (* 7.0 _a_1_) l_1_2_12)) (* (* 7.0 _a_1_) l_1_2_6))))
 (let ((?x817 (- (- (- (- (+ (- (- ?x806 ?x807) ?x809) _a_1_) ?x812) ?x814) l_1_2_13) l_1_2_14)))
 (let ((?x828 (- (- (- (- (- (- ?x817 ?x818) l_1_2_2) ?x821) ?x823) l_1_2_5) (* (* l_1_2_9 _a_1_) _a_1_))))
 (= ?x828 0.0))))))))))))
(assert
 (let ((?x908 (* (/ 3.0 2.0) l_1_2_4)))
 (let ((?x906 (* (/ 3.0 2.0) l_1_2_3)))
 (let ((?x897 (* (/ 3.0 2.0) l_1_2_11)))
 (let ((?x895 (* 21.0 l_1_2_10)))
 (let ((?x893 (* (/ 23.0 25.0) _a_2_)))
 (let ((?x890 (* _a_2_ l_1_2_8)))
 (let ((?x888 (* _a_2_ l_1_2_7)))
 (let ((?x886 (* _a_2_ l_1_2_1)))
 (let ((?x891 (- (- (- (* (* (* (- 2.0) _a_1_) _a_2_) l_1_2_9) ?x886) ?x888) ?x890)))
 (let ((?x902 (- (- (- (+ ?x891 ?x893) ?x895) ?x897) (* l_1_2_12 (+ (* (/ 3.0 2.0) _a_1_) (* 7.0 _a_2_))))))
 (let ((?x911 (- (- (- (- ?x902 (* (* 2.0 l_1_2_15) l_1_2_16)) ?x906) ?x908) (* l_1_2_6 (+ (* (/ 3.0 2.0) _a_1_) (* 7.0 _a_2_))))))
 (= ?x911 0.0)))))))))))))
(assert
 (>= l_1_2_1 0.0))
(assert
 (>= l_1_2_2 0.0))
(assert
 (>= l_1_2_3 0.0))
(assert
 (>= l_1_2_4 0.0))
(assert
 (>= l_1_2_5 0.0))
(assert
 (>= l_1_2_6 0.0))
(assert
 (>= l_1_2_7 0.0))
(assert
 (>= l_1_2_8 0.0))
(assert
 (>= l_1_2_9 0.0))
(assert
 (>= l_1_2_10 0.0))
(assert
 (>= l_1_2_11 0.0))
(assert
 (>= l_1_2_12 0.0))
(assert
 (>= l_1_2_13 0.0))
(assert
 (>= l_1_2_14 0.0))
(assert
 (>= l_1_2_15 0.0))
(assert
 (>= l_1_2_17 0.0))
(check-sat)
(get-model)