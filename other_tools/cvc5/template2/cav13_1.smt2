; benchmark generated from python API
(set-info :status unknown)
(declare-fun a3 () Real)
(declare-fun a2 () Real)
(declare-fun a1 () Real)
(assert
 (forall ((x1 Real) (x2 Real) )(let (($x64 (>= (+ (+ a1 (* a2 (^ x1 2.0))) (* a3 (^ x2 2.0))) 0.0)))
 (let (($x68 (<= x2 5.0)))
 (let (($x69 (>= x2 (- 5.0))))
 (let (($x70 (<= x1 5.0)))
 (let (($x71 (>= x1 (- 5.0))))
 (let (($x72 (and $x71 $x70 $x69 $x68)))
 (let (($x73 (and $x72 (>= (- (- 1.0 (^ x1 2.0)) (^ x2 2.0)) 0.0))))
 (=> $x73 $x64)))))))))
 )
(assert
 (forall ((x1 Real) (x2 Real) )(let ((?x81 (^ (+ (+ x2 (* (- (+ (^ x1 2.0) x2) 1.0) x2)) 1.0) 2.0)))
 (let ((?x86 (+ (+ a1 (* a2 (^ (- (+ (^ x1 2.0) x2) 1.0) 2.0))) (* a3 ?x81))))
 (let (($x90 (>= (- (- 3.0 (^ x1 2.0)) (^ x2 2.0)) 0.0)))
 (let (($x64 (>= (+ (+ a1 (* a2 (^ x1 2.0))) (* a3 (^ x2 2.0))) 0.0)))
 (let (($x68 (<= x2 5.0)))
 (let (($x69 (>= x2 (- 5.0))))
 (let (($x70 (<= x1 5.0)))
 (let (($x71 (>= x1 (- 5.0))))
 (let (($x72 (and $x71 $x70 $x69 $x68)))
 (=> (and $x72 $x64 $x90) (>= ?x86 0.0))))))))))))
 )
(assert
 (forall ((x1 Real) (x2 Real) )(let (($x64 (>= (+ (+ a1 (* a2 (^ x1 2.0))) (* a3 (^ x2 2.0))) 0.0)))
 (let (($x68 (<= x2 5.0)))
 (let (($x69 (>= x2 (- 5.0))))
 (let (($x70 (<= x1 5.0)))
 (let (($x71 (>= x1 (- 5.0))))
 (let (($x72 (and $x71 $x70 $x69 $x68)))
 (let (($x101 (and $x72 $x64 (not (>= (- (- 3.0 (^ x1 2.0)) (^ x2 2.0)) 0.0)))))
 (=> $x101 (<= (- (+ (- x2) (* (/ 1.0 5.0) (^ x1 2.0))) 1.0) 0.0))))))))))
 )
(check-sat)
