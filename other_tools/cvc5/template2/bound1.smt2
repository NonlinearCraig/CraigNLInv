; benchmark generated from python API
(set-info :status unknown)
(declare-fun a3 () Real)
(declare-fun a2 () Real)
(declare-fun a1 () Real)
(assert
 (forall ((x1 Real) (x2 Real) )(let (($x78 (>= (+ (+ (* a1 (^ x1 2.0)) (* a2 (^ x2 2.0))) a3) 0.0)))
 (let (($x79 (<= x2 5.0)))
 (let (($x80 (>= x2 (- 5.0))))
 (let (($x81 (<= x1 5.0)))
 (let (($x82 (>= x1 (- 5.0))))
 (let (($x83 (and $x82 $x81 $x80 $x79)))
 (let (($x91 (and (>= (* (- x1 (/ 9.0 10.0)) (- (/ 11.0 10.0) x1)) 0.0) (>= (* x2 (- (/ 1.0 5.0) x2)) 0.0) $x83)))
 (=> $x91 $x78)))))))))
 )
(assert
 (forall ((x1 Real) (x2 Real) )(let ((?x97 (^ (+ (* (- (/ 3.0 5.0)) (^ x1 2.0)) (* (/ 3.0 10.0) (^ x2 2.0))) 2.0)))
 (let ((?x102 (^ (+ (* (/ 1.0 2.0) (^ x1 2.0)) (* (/ 2.0 5.0) (^ x2 2.0))) 2.0)))
 (let (($x79 (<= x2 5.0)))
 (let (($x80 (>= x2 (- 5.0))))
 (let (($x81 (<= x1 5.0)))
 (let (($x82 (>= x1 (- 5.0))))
 (let (($x83 (and $x82 $x81 $x80 $x79)))
 (let (($x110 (>= (+ (- (- (^ x1 2.0)) (^ x2 2.0)) 2.0) 0.0)))
 (let (($x78 (>= (+ (+ (* a1 (^ x1 2.0)) (* a2 (^ x2 2.0))) a3) 0.0)))
 (=> (and $x78 $x110 $x83) (>= (+ (+ (* a1 ?x102) (* a2 ?x97)) a3) 0.0))))))))))))
 )
(assert
 (forall ((x1 Real) (x2 Real) )(let (($x79 (<= x2 5.0)))
 (let (($x80 (>= x2 (- 5.0))))
 (let (($x81 (<= x1 5.0)))
 (let (($x82 (>= x1 (- 5.0))))
 (let (($x83 (and $x82 $x81 $x80 $x79)))
 (let (($x110 (>= (+ (- (- (^ x1 2.0)) (^ x2 2.0)) 2.0) 0.0)))
 (let (($x78 (>= (+ (+ (* a1 (^ x1 2.0)) (* a2 (^ x2 2.0))) a3) 0.0)))
 (=> (and $x78 (not $x110) $x83) (<= (- (+ x2 (* 2.0 x1)) 2.0) 0.0))))))))))
 )
(check-sat)
