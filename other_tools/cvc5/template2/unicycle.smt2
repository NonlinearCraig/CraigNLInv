(set-info :status unknown)
(declare-fun a4 () Real)
(declare-fun a3 () Real)
(declare-fun a2 () Real)
(declare-fun a1 () Real)
(assert
 (forall ((x1 Real) (x2 Real) )(let ((?x69 (* a3 x2)))
 (let ((?x76 (+ (+ (+ (* a1 (^ x1 2.0)) (* a2 (^ x2 2.0))) ?x69) a4)))
 (let (($x77 (>= ?x76 0.0)))
 (let (($x78 (<= x2 5.0)))
 (let (($x79 (>= x2 (- 5.0))))
 (let (($x80 (<= x1 5.0)))
 (let (($x81 (>= x1 (- 5.0))))
 (let (($x87 (<= (- (+ (^ x1 2.0) (^ (- x2 1.0) 2.0)) 1.0) 0.0)))
 (=> (and $x87 (and $x81 $x80 $x79 $x78)) $x77))))))))))
 )
(assert
 (forall ((x1 Real) (x2 Real) )(let ((?x97 (+ x2 (* (* (/ 1.0 100.0) x1) (- (+ (/ 5089.0 5000.0) (* (/ 18721.0 10000.0) x1)) (* (/ 253.0 10000.0) x2))))))
 (let ((?x103 (* (/ 1.0 100.0) (- 1.0 (* x2 (- (+ (/ 5089.0 5000.0) (* (/ 18721.0 10000.0) x1)) (* (/ 253.0 10000.0) x2)))))))
 (let ((?x108 (+ (+ (* a1 (^ (+ x1 ?x103) 2.0)) (* a2 (^ ?x97 2.0))) (* a3 ?x97))))
 (let ((?x69 (* a3 x2)))
 (let ((?x76 (+ (+ (+ (* a1 (^ x1 2.0)) (* a2 (^ x2 2.0))) ?x69) a4)))
 (let (($x77 (>= ?x76 0.0)))
 (=> (and $x77 true) (>= (+ ?x108 a4) 0.0)))))))))
 )
(assert
 (forall ((x1 Real) (x2 Real) )(let (($x116 (<= (- (+ (^ x1 2.0) (^ (- x2 1.0) 2.0)) 4.0) 0.0)))
 (let ((?x69 (* a3 x2)))
 (let ((?x76 (+ (+ (+ (* a1 (^ x1 2.0)) (* a2 (^ x2 2.0))) ?x69) a4)))
 (let (($x77 (>= ?x76 0.0)))
 (=> (and $x77 (not true)) $x116))))))
 )
(check-sat)
