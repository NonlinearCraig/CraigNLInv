#lang rosette
(require rosette/lib/synthax)
(define-symbolic _a_0_ real?)
(define-symbolic _a_1_ real?)
(define-symbolic err_0 real?)
(define-symbolic a_0 real?)
(define-symbolic r_0 real?)
(define-symbolic p_0 real?)
(define-symbolic q_0 real?)
(define start (current-inexact-milliseconds))

(define sol
  (synthesize
   
   #:forall (list r_0 a_0 p_0 err_0 q_0)
   #:guarantee (and (implies (and (>= (+ -1.00000000000000 a_0) 0) (>= err_0 0)) (and (>= (+ _a_0_ (* -1.00000000000000 _a_1_) (* _a_1_ a_0)) 0)))
(implies (and (>= (+ -1.00000000000000 a_0) 0) (>= err_0 0)) (and (>= 0 0)))
(implies (and (>= (+ -1.00000000000000 a_0) 0) (>= err_0 0)) (and (>= 0 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ r_0)) 0) (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0) (>= (+ err_0 (* -2.00000000000000 p_0 r_0)) 0)) (and (>= (+ err_0 q_0**2 (* -1 a_0)) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ r_0)) 0) (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0) (>= (+ err_0 (* -2.00000000000000 p_0 r_0)) 0)) (and (>= (+ a_0 (* -1 q_0**2)) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ r_0)) 0) (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0) (>= (+ (* -1 err_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ (* 2.00000000000000 r_0) (* -1.00000000000000 p_0) (* -2.00000000000000 q_0)) 0)) (and (>= (+ _a_0_ (* -1 _a_1_ p_0) (* 2.00000000000000 _a_1_ r_0) (* -2.00000000000000 _a_1_ q_0)) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ r_0)) 0) (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0) (>= (+ (* -1 err_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ (* 2.00000000000000 r_0) (* -1.00000000000000 p_0) (* -2.00000000000000 q_0)) 0)) (and (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ r_0)) 0) (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0) (>= (+ (* -1 err_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ (* 2.00000000000000 r_0) (* -1.00000000000000 p_0) (* -2.00000000000000 q_0)) 0)) (and (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ r_0)) 0) (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0) (>= (+ (* -1 err_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ (* 1.00000000000000 p_0) (* 2.00000000000000 q_0) (* -2.00000000000000 r_0)) 0)) (and (>= (+ _a_0_ (* 2.00000000000000 _a_1_ r_0)) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ r_0)) 0) (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0) (>= (+ (* -1 err_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ (* 1.00000000000000 p_0) (* 2.00000000000000 q_0) (* -2.00000000000000 r_0)) 0)) (and (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ r_0)) 0) (>= (+ q_0**2 (* -1 a_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0) (>= (+ (* -1 err_0) (* 2.00000000000000 p_0 r_0)) 0) (>= (+ (* 1.00000000000000 p_0) (* 2.00000000000000 q_0) (* -2.00000000000000 r_0)) 0)) (and (>= (+ a_0 (* -1 q_0**2) (* -2.00000000000000 p_0 r_0)) 0))))
   )
  )
(define end (current-inexact-milliseconds))
(print (- end start))
