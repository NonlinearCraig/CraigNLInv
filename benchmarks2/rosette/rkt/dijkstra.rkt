#lang rosette
(require rosette/lib/synthax)
(define-symbolic _a_0_ real?)
(define-symbolic _a_1_ real?)
(define-symbolic _a_2_ real?)
(define-symbolic _a_3_ real?)
(define-symbolic _a_4_ real?)
(define-symbolic _a_5_ real?)
(define-symbolic vr_0 real?)
(define-symbolic vq_0 real?)
(define-symbolic vn_0 real?)
(define-symbolic vp_0 real?)
(define-symbolic vh_0 real?)
(define start (current-inexact-milliseconds))

(define sol
  (synthesize
   
   #:forall (list vq_0 vn_0 vh_0 vr_0 vp_0)
   #:guarantee (and (implies (and (>= (* -1 vp_0) 0) (>= vp_0 0) (>= (+ (* -1 vq_0) (* 4.00000000000000 vn_0)) 0) (>= (+ -1.00000000000000 vq_0 (* -1 vn_0)) 0) (>= (+ vn_0 (* -1 vr_0)) 0) (>= (+ vr_0 (* -1 vn_0)) 0)) (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* _a_3_ vq_0) (* _a_4_ vh_0) (* _a_5_ vp_0)) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* _a_3_ vq_0) (* _a_4_ vh_0) (* _a_5_ vp_0)) 0) (>= (+ 2.00000000000000 (* -1 vq_0)) 0)) (and (>= (+ 2.00000000000000 (* -1 vq_0)) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* _a_3_ vq_0) (* _a_4_ vh_0) (* _a_5_ vp_0)) 0) (>= (+ -2.00000000000000 vq_0) 0) (>= (+ vr_0 (* -1 vh_0)) 0) (>= (+ -1.00000000000000 (* -1 vr_0) (* 1.00000000000000 vp_0) (* 0.625000000000000 vq_0)) 0)) (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* vp_0 (+ (* 0.250000000000000 _a_4_) (* 0.250000000000000 _a_5_) (* -0.500000000000000 _a_1_))) (* vq_0 (+ (* 0.0625000000000000 _a_3_) (* 0.125000000000000 _a_5_) (* 0.140625000000000 _a_4_) (* -0.312500000000000 _a_1_)))) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* _a_3_ vq_0) (* _a_4_ vh_0) (* _a_5_ vp_0)) 0) (>= (+ -2.00000000000000 vq_0) 0) (>= (+ vr_0 (* -1 vh_0)) 0) (>= (+ 1.00000000000000 vr_0 (* -1.00000000000000 vp_0) (* -0.625000000000000 vq_0)) 0)) (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* vp_0 (+ (* 0.500000000000000 _a_4_) (* 0.500000000000000 _a_5_) (* -0.500000000000000 _a_1_))) (* vq_0 (+ (* 0.250000000000000 _a_3_) (* 0.250000000000000 _a_5_) (* 0.312500000000000 _a_4_) (* -0.312500000000000 _a_1_)))) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* _a_3_ vq_0) (* _a_4_ vh_0) (* _a_5_ vp_0)) 0) (>= (+ -2.00000000000000 vq_0) 0) (>= (+ vh_0 (* -1 vr_0)) 0) (>= (+ -1.00000000000000 vh_0 (* -1 vr_0)) 0)) (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* vp_0 (+ (* 0.500000000000000 _a_4_) (* 0.500000000000000 _a_5_))) (* vq_0 (+ (* 0.0625000000000000 _a_4_) (* 0.250000000000000 _a_3_)))) 0)))
(implies (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* _a_3_ vq_0) (* _a_4_ vh_0) (* _a_5_ vp_0)) 0) (>= (+ -2.00000000000000 vq_0) 0) (>= (+ vh_0 (* -1 vr_0)) 0) (>= (+ 1.00000000000000 vr_0 (* -1 vh_0)) 0)) (and (>= (+ _a_0_ (* _a_1_ vr_0) (* _a_2_ vn_0) (* _a_3_ vq_0) (* _a_4_ vh_0) (* _a_5_ vp_0)) 0))))
   )
  )
(define end (current-inexact-milliseconds))
(print (- end start))
