(set-logic LIA)

( declare-const A Int )
( declare-const A! Int )
( declare-const B Int )
( declare-const B! Int )
( declare-const b Int )
( declare-const b! Int )
( declare-const q Int )
( declare-const q! Int )
( declare-const r Int )
( declare-const r! Int )

( declare-const A_0 Int )
( declare-const A_1 Int )
( declare-const A_2 Int )
( declare-const A_3 Int )
( declare-const A_4 Int )
( declare-const B_0 Int )
( declare-const B_1 Int )
( declare-const B_2 Int )
( declare-const B_3 Int )
( declare-const B_4 Int )
( declare-const b_0 Int )
( declare-const b_1 Int )
( declare-const b_2 Int )
( declare-const b_3 Int )
( declare-const b_4 Int )
( declare-const q_0 Int )
( declare-const q_1 Int )
( declare-const q_2 Int )
( declare-const q_3 Int )
( declare-const q_4 Int )
( declare-const r_0 Int )
( declare-const r_1 Int )
( declare-const r_2 Int )
( declare-const r_3 Int )
( declare-const r_4 Int )

( define-fun inv-f( ( A Int )( B Int )( b Int )( q Int )( r Int ) ) Bool
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
)

( define-fun pre-f ( ( A Int )( B Int )( b Int )( q Int )( r Int )( A_0 Int )( A_1 Int )( A_2 Int )( A_3 Int )( A_4 Int )( B_0 Int )( B_1 Int )( B_2 Int )( B_3 Int )( B_4 Int )( b_0 Int )( b_1 Int )( b_2 Int )( b_3 Int )( b_4 Int )( q_0 Int )( q_1 Int )( q_2 Int )( q_3 Int )( q_4 Int )( r_0 Int )( r_1 Int )( r_2 Int )( r_3 Int )( r_4 Int ) ) Bool
	( and
		( = A A_0 )
		( = B B_0 )
		( = b b_0 )
		( = q q_0 )
		( = r r_0 )
		( = q_0 0 )
		( = r_0 A_0 )
		( = b_0 B_0 )
		( >= b_0 ( + r_0 1 ) )
	)
)

( define-fun trans-f ( ( A Int )( B Int )( b Int )( q Int )( r Int )( A! Int )( B! Int )( b! Int )( q! Int )( r! Int )( A_0 Int )( A_1 Int )( A_2 Int )( A_3 Int )( A_4 Int )( B_0 Int )( B_1 Int )( B_2 Int )( B_3 Int )( B_4 Int )( b_0 Int )( b_1 Int )( b_2 Int )( b_3 Int )( b_4 Int )( q_0 Int )( q_1 Int )( q_2 Int )( q_3 Int )( q_4 Int )( r_0 Int )( r_1 Int )( r_2 Int )( r_3 Int )( r_4 Int ) ) Bool
	( or
		( and
			( = A_1 A )
			( = B_1 B )
			( = b_1 b )
			( = q_1 q )
			( = r_1 r )
			( = A_1 A! )
			( = B_1 B! )
			( = b_1 b! )
			( = q_1 q! )
			( = r_1 r! )
			( = A A! )
			( = q q! )
			( = r r! )
		)
		( and
			( = A_1 A )
			( = B_1 B )
			( = b_1 b )
			( = q_1 q )
			( = r_1 r )
			( <= ( - ( + B_1 1 ) b_1 ) 0 )
			( >= r_1 b_1 )
			( = A_2 A_1 )
			( = B_2 B_1 )
			( = q_2 ( + ( * 2 q_1 ) 1 ) )
			( = r_2 ( - r_1 ( / b_1 2 ) ) )
			( = b_2 ( / b_1 2 ) )
			( = A_3 A_2 )
			( = B_3 B_2 )
			( = b_3 b_2 )
			( = q_3 q_2 )
			( = r_3 r_2 )
			( = A_3 A! )
			( = B_3 B! )
			( = b_3 b! )
			( = q_3 q! )
			( = r_3 r! )
		)
		( and
			( = A_1 A )
			( = B_1 B )
			( = b_1 b )
			( = q_1 q )
			( = r_1 r )
			( <= ( - ( + B_1 1 ) b_1 ) 0 )
			( not ( >= r_1 b_1 ) )
			( <= ( - ( + r_1 1 ) b_1 ) 0 )
			( = A_4 A_1 )
			( = B_4 B_1 )
			( = q_4 ( * 2 q_1 ) )
			( = r_4 r_1 )
			( = b_4 ( / b_1 2 ) )
			( = A_3 A_4 )
			( = B_3 B_4 )
			( = b_3 b_4 )
			( = q_3 q_4 )
			( = r_3 r_4 )
			( = A_3 A! )
			( = B_3 B! )
			( = b_3 b! )
			( = q_3 q! )
			( = r_3 r! )
		)
		( and
			( = A_1 A )
			( = B_1 B )
			( = b_1 b )
			( = q_1 q )
			( = r_1 r )
			( <= ( - ( + B_1 1 ) b_1 ) 0 )
			( not ( >= r_1 b_1 ) )
			( not ( <= ( - ( + r_1 1 ) b_1 ) 0 ) )
			( = A_3 A_1 )
			( = B_3 B_1 )
			( = b_3 b_1 )
			( = q_3 q_1 )
			( = r_3 r_1 )
			( = A_3 A! )
			( = B_3 B! )
			( = b_3 b! )
			( = q_3 q! )
			( = r_3 r! )
		)
	)
)

( define-fun post-f ( ( A Int )( B Int )( b Int )( q Int )( r Int )( A_0 Int )( A_1 Int )( A_2 Int )( A_3 Int )( A_4 Int )( B_0 Int )( B_1 Int )( B_2 Int )( B_3 Int )( B_4 Int )( b_0 Int )( b_1 Int )( b_2 Int )( b_3 Int )( b_4 Int )( q_0 Int )( q_1 Int )( q_2 Int )( q_3 Int )( q_4 Int )( r_0 Int )( r_1 Int )( r_2 Int )( r_3 Int )( r_4 Int ) ) Bool
	( or
		( not
			( and
				( = A A_1)
				( = B B_1)
				( = b b_1)
				( = q q_1)
				( = r r_1)
			)
		)
		( not
			( and
				( not ( <= ( - ( + B_1 1 ) b_1 ) 0 ) )
				( not ( >= B_1 ( - b_1 1 ) ) )
			)
		)
	)
)
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( pre-f A B b q r A_0 A_1 A_2 A_3 A_4 B_0 B_1 B_2 B_3 B_4 b_0 b_1 b_2 b_3 b_4 q_0 q_1 q_2 q_3 q_4 r_0 r_1 r_2 r_3 r_4  )
		( inv-f A B b q r )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( and
			( inv-f A B b q r )
			( trans-f A B b q r A! B! b! q! r! A_0 A_1 A_2 A_3 A_4 B_0 B_1 B_2 B_3 B_4 b_0 b_1 b_2 b_3 b_4 q_0 q_1 q_2 q_3 q_4 r_0 r_1 r_2 r_3 r_4 )
		)
		( inv-f A! B! b! q! r! )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( inv-f A B b q r  )
		( post-f A B b q r A_0 A_1 A_2 A_3 A_4 B_0 B_1 B_2 B_3 B_4 b_0 b_1 b_2 b_3 b_4 q_0 q_1 q_2 q_3 q_4 r_0 r_1 r_2 r_3 r_4 )
	)
))

