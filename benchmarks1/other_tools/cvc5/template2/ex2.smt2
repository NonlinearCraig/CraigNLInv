(set-info :status unknown)
(declare-fun a2 () Real)
(declare-fun a1 () Real)
(assert
 (forall ((x1 Real) (x2 Real) )(let (($x68 (>= (+ (+ (* a1 (^ x1 2.0)) (* a2 (^ x2 2.0))) 1.0) 0.0)))
 (let (($x69 (<= x2 5.0)))
 (let (($x70 (>= x2 (- 5.0))))
 (let (($x71 (<= x1 5.0)))
 (let (($x72 (>= x1 (- 5.0))))
 (let (($x73 (and $x72 $x71 $x70 $x69)))
 (let (($x77 (and (<= (- (+ (^ x1 2.0) (^ x2 2.0)) 1.0) 0.0) $x73)))
 (=> $x77 $x68)))))))))
 )
(assert
 (forall ((x1 Real) (x2 Real) )(let ((?x90 (+ (* a1 (^ (* (/ 9.0 10.0) (- x1 (* (/ 1.0 100.0) x2))) 2.0)) (* a2 (^ (* (/ 9.0 10.0) (+ x2 (* (/ 1.0 100.0) x1))) 2.0)))))
 (let (($x69 (<= x2 5.0)))
 (let (($x70 (>= x2 (- 5.0))))
 (let (($x71 (<= x1 5.0)))
 (let (($x72 (>= x1 (- 5.0))))
 (let (($x73 (and $x72 $x71 $x70 $x69)))
 (let (($x68 (>= (+ (+ (* a1 (^ x1 2.0)) (* a2 (^ x2 2.0))) 1.0) 0.0)))
 (=> (and $x68 true true $x73) (>= (+ ?x90 1.0) 0.0))))))))))
 )
(assert
 (forall ((x1 Real) (x2 Real) )(let (($x101 (<= (- (- (/ 1.0 4.0) (^ x1 2.0)) (^ (- x2 2.0) 2.0)) 0.0)))
 (let (($x69 (<= x2 5.0)))
 (let (($x70 (>= x2 (- 5.0))))
 (let (($x71 (<= x1 5.0)))
 (let (($x72 (>= x1 (- 5.0))))
 (let (($x73 (and $x72 $x71 $x70 $x69)))
 (let (($x68 (>= (+ (+ (* a1 (^ x1 2.0)) (* a2 (^ x2 2.0))) 1.0) 0.0)))
 (=> (and $x68 (not true) $x73) $x101)))))))))
 )
(assert
 (let (($x22 (<= a2 10.0)))
 (let (($x21 (>= a2 (- 10.0))))
 (let (($x20 (<= a1 10.0)))
 (let (($x18 (>= a1 (- 10.0))))
 (and $x18 $x20 $x21 $x22))))))
(check-sat)
