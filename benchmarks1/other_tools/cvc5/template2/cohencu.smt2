(set-info :status unknown)
(declare-fun a4 () Real)
(declare-fun a3 () Real)
(declare-fun a2 () Real)
(declare-fun a1 () Real)
(assert
 (forall ((x2 Real) (x1 Real) )(let ((?x67 (^ x1 2.0)))
 (let ((?x68 (* a4 ?x67)))
 (let (($x74 (>= (+ (+ (+ a1 (* a2 x1)) (* a3 x2)) ?x68) 0.0)))
 (let (($x75 (<= x1 10.0)))
 (let (($x76 (>= x1 0.0)))
 (let (($x77 (<= x2 10.0)))
 (let (($x78 (>= x2 0.0)))
 (let (($x79 (and $x78 $x77 $x76 $x75)))
 (=> (and (and (= x2 0.0) (= x1 0.0)) $x79) $x74))))))))))
 )
(assert
 (forall ((x2 Real) (x1 Real) )(let ((?x95 (+ (+ a1 (* a2 (+ x1 1.0))) (* a3 (+ (+ x2 (* (/ 11.0 2.0) x1)) 6.0)))))
 (let (($x75 (<= x1 10.0)))
 (let (($x76 (>= x1 0.0)))
 (let (($x77 (<= x2 10.0)))
 (let (($x78 (>= x2 0.0)))
 (let (($x79 (and $x78 $x77 $x76 $x75)))
 (let (($x99 (<= (- x1 5.0) 0.0)))
 (let ((?x67 (^ x1 2.0)))
 (let ((?x68 (* a4 ?x67)))
 (let (($x74 (>= (+ (+ (+ a1 (* a2 x1)) (* a3 x2)) ?x68) 0.0)))
 (=> (and $x74 $x99 $x79) (>= (+ ?x95 (* a4 (^ (+ x1 1.0) 2.0))) 0.0)))))))))))))
 )
(assert
 (forall ((x2 Real) (x1 Real) )(let (($x114 (and (<= (- (+ (* (/ 5.0 2.0) (^ x1 2.0)) (* 4.0 x1)) x2) 0.0) (<= (- (- x2 (* (/ 7.0 2.0) (^ x1 2.0))) (* 3.0 x1)) 0.0))))
 (let (($x75 (<= x1 10.0)))
 (let (($x76 (>= x1 0.0)))
 (let (($x77 (<= x2 10.0)))
 (let (($x78 (>= x2 0.0)))
 (let (($x79 (and $x78 $x77 $x76 $x75)))
 (let ((?x67 (^ x1 2.0)))
 (let ((?x68 (* a4 ?x67)))
 (let (($x74 (>= (+ (+ (+ a1 (* a2 x1)) (* a3 x2)) ?x68) 0.0)))
 (=> (and $x74 (not (<= (- x1 5.0) 0.0)) $x79) $x114)))))))))))
 )
(check-sat)
