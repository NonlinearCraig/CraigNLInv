(set-option :produce-models true); benchmark generated from python API
(set-info :status unknown)
(declare-fun l_0_0_9 () Real)
(declare-fun l_0_0_8 () Real)
(declare-fun _a_0_ () Real)
(declare-fun l_0_0_5 () Real)
(declare-fun l_0_0_3 () Real)
(declare-fun l_0_0_4 () Real)
(declare-fun l_0_0_2 () Real)
(declare-fun l_0_0_7 () Real)
(declare-fun l_0_0_10 () Real)
(declare-fun _a_1_ () Real)
(declare-fun l_0_0_12 () Real)
(declare-fun l_0_0_11 () Real)
(declare-fun _a_2_ () Real)
(declare-fun l_0_0_1 () Real)
(declare-fun _a_3_ () Real)
(declare-fun l_0_0_6 () Real)
(declare-fun l_0_1_9 () Real)
(declare-fun l_0_1_8 () Real)
(declare-fun l_0_1_15 () Real)
(declare-fun l_0_1_14 () Real)
(declare-fun l_0_1_3 () Real)
(declare-fun l_0_1_2 () Real)
(declare-fun l_0_1_18 () Real)
(declare-fun l_0_1_17 () Real)
(declare-fun l_0_1_16 () Real)
(declare-fun l_0_1_12 () Real)
(declare-fun l_0_1_11 () Real)
(declare-fun l_0_1_10 () Real)
(declare-fun l_0_1_6 () Real)
(declare-fun l_0_1_5 () Real)
(declare-fun l_0_1_4 () Real)
(declare-fun l_0_1_7 () Real)
(declare-fun l_0_1_13 () Real)
(declare-fun l_0_1_1 () Real)
(declare-fun l_0_2_9 () Real)
(declare-fun l_0_2_8 () Real)
(declare-fun l_0_2_15 () Real)
(declare-fun l_0_2_14 () Real)
(declare-fun l_0_2_3 () Real)
(declare-fun l_0_2_2 () Real)
(declare-fun l_0_2_16 () Real)
(declare-fun l_0_2_13 () Real)
(declare-fun l_0_2_7 () Real)
(declare-fun l_0_2_10 () Real)
(declare-fun l_0_2_4 () Real)
(declare-fun l_0_2_1 () Real)
(declare-fun l_0_2_18 () Real)
(declare-fun l_0_2_17 () Real)
(declare-fun l_0_2_12 () Real)
(declare-fun l_0_2_11 () Real)
(declare-fun l_0_2_6 () Real)
(declare-fun l_0_2_5 () Real)
(assert
 (= (- (- _a_0_ (* l_0_0_8 l_0_0_8)) (* l_0_0_9 l_0_0_9)) 0.0))
(assert
 (let ((?x95 (- (- _a_1_ (* (* 2.0 l_0_0_10) l_0_0_7)) (* (* 4.0 l_0_0_2) l_0_0_4))))
 (= (- ?x95 (* (* 4.0 l_0_0_3) l_0_0_5)) 0.0)))
(assert
 (let ((?x129 (* l_0_0_3 l_0_0_3)))
 (let ((?x127 (* l_0_0_2 l_0_0_2)))
 (let ((?x125 (* l_0_0_12 l_0_0_12)))
 (let ((?x126 (- (- (- _a_2_ (* l_0_0_10 l_0_0_10)) (* l_0_0_11 l_0_0_11)) ?x125)))
 (= (+ (+ ?x126 ?x127) ?x129) 0.0))))))
(assert
 (let ((?x147 (* l_0_0_7 l_0_0_7)))
 (let ((?x129 (* l_0_0_3 l_0_0_3)))
 (let ((?x127 (* l_0_0_2 l_0_0_2)))
 (let ((?x148 (- (+ (+ (- _a_3_ (* (* 4.0 l_0_0_1) l_0_0_2)) ?x127) ?x129) ?x147)))
 (= ?x148 0.0))))))
(assert
 (let ((?x166 (* l_0_0_6 l_0_0_6)))
 (let ((?x164 (* l_0_0_5 l_0_0_5)))
 (= (+ (+ (+ (* l_0_0_1 l_0_0_1) (* l_0_0_4 l_0_0_4)) ?x164) ?x166) 0.0))))
(assert
 (let ((?x171 (* 2.0 l_0_0_1)))
 (let ((?x172 (* ?x171 l_0_0_2)))
 (let ((?x178 (- (- ?x172 (* (* 2.0 l_0_0_4) l_0_0_4)) (* (* 2.0 l_0_0_5) l_0_0_5))))
 (= (- ?x178 (* (* 2.0 l_0_0_6) l_0_0_6)) 0.0)))))
(assert
 (= (* (* 2.0 l_0_0_1) l_0_0_4) 0.0))
(assert
 (let ((?x206 (* 2.0 l_0_0_3)))
 (let ((?x207 (* ?x206 l_0_0_5)))
 (let ((?x205 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (= (+ ?x205 ?x207) 0.0)))))
(assert
 (let ((?x166 (* l_0_0_6 l_0_0_6)))
 (= (+ (+ (* l_0_0_4 l_0_0_4) (* l_0_0_5 l_0_0_5)) ?x166) 0.0)))
(assert
 (let ((?x161 (* l_0_0_1 l_0_0_1)))
 (= ?x161 0.0)))
(assert
 (let ((?x171 (* 2.0 l_0_0_1)))
 (let ((?x172 (* ?x171 l_0_0_2)))
 (= (- ?x172 (* ?x171 l_0_0_1)) 0.0))))
(assert
 (= (* (* 2.0 l_0_0_1) l_0_0_4) 0.0))
(assert
 (let ((?x206 (* 2.0 l_0_0_3)))
 (let ((?x207 (* ?x206 l_0_0_5)))
 (let ((?x205 (* (* 2.0 l_0_0_2) l_0_0_4)))
 (= (+ (+ (* (* (- 4.0) l_0_0_1) l_0_0_4) ?x205) ?x207) 0.0)))))
(assert
 (let ((?x240 (- (* (* (- 2.0) l_0_0_2) l_0_0_2) (* (* 2.0 l_0_0_3) l_0_0_3))))
 (= (- ?x240 (* (* 2.0 l_0_0_7) l_0_0_8)) 0.0)))
(assert
 (let ((?x264 (- (* (* (- 2.0) l_0_0_10) l_0_0_8) (* (* 2.0 l_0_0_11) l_0_0_9))))
 (= ?x264 0.0)))
(assert
 (>= l_0_0_1 0.0))
(assert
 (>= l_0_0_3 0.0))
(assert
 (>= l_0_0_6 0.0))
(assert
 (>= l_0_0_7 0.0))
(assert
 (>= l_0_0_9 0.0))
(assert
 (>= l_0_0_12 0.0))
(assert
 (let ((?x290 (* l_0_1_15 l_0_1_15)))
 (let ((?x288 (* l_0_1_14 l_0_1_14)))
 (let ((?x289 (- (* (- _a_0_) (+ (* l_0_1_2 l_0_1_2) (* l_0_1_3 l_0_1_3))) ?x288)))
 (let ((?x298 (+ (+ (- ?x289 ?x290) (* 1.0 (* l_0_1_8 l_0_1_8))) (* 1.0 (* l_0_1_9 l_0_1_9)))))
 (= (+ ?x298 3.0) 0.0))))))
(assert
 (let ((?x339 (* l_0_1_18 l_0_1_18)))
 (let ((?x337 (* l_0_1_17 l_0_1_17)))
 (let ((?x335 (* l_0_1_16 l_0_1_16)))
 (let ((?x321 (* l_0_1_6 l_0_1_6)))
 (let ((?x322 (+ (+ (* l_0_1_4 l_0_1_4) (* l_0_1_5 l_0_1_5)) ?x321)))
 (let ((?x283 (- _a_0_)))
 (let ((?x325 (- (* ?x283 ?x322) (* _a_2_ (+ (* l_0_1_2 l_0_1_2) (* l_0_1_3 l_0_1_3))))))
 (let ((?x331 (+ (+ ?x325 (* 1.0 (* l_0_1_10 l_0_1_10))) (* 1.0 (* l_0_1_11 l_0_1_11)))))
 (let ((?x340 (- (- (- (+ ?x331 (* 1.0 (* l_0_1_12 l_0_1_12))) ?x335) ?x337) ?x339)))
 (= (- ?x340 1.0) 0.0)))))))))))
(assert
 (let ((?x380 (* l_0_1_13 l_0_1_13)))
 (let ((?x379 (- (* (* (- _a_0_) l_0_1_1) l_0_1_1) (* _a_3_ (+ (* l_0_1_2 l_0_1_2) (* l_0_1_3 l_0_1_3))))))
 (= (- (+ (- ?x379 ?x380) (* 1.0 (* l_0_1_7 l_0_1_7))) 1.0) 0.0))))
(assert
 (let ((?x415 (- (* (* (* (- 2.0) _a_0_) l_0_1_1) l_0_1_2) (* (* 2.0 l_0_1_13) l_0_1_14))))
 (= (+ (+ ?x415 (* (* 2.0 l_0_1_7) l_0_1_8)) 2.0) 0.0)))
(assert
 (let ((?x436 (- (* (* (* (- 2.0) _a_0_) l_0_1_1) l_0_1_4) (* _a_1_ (+ (* l_0_1_2 l_0_1_2) (* l_0_1_3 l_0_1_3))))))
 (let ((?x441 (- (+ ?x436 (* (* 2.0 l_0_1_10) l_0_1_7)) (* (* 2.0 l_0_1_13) l_0_1_16))))
 (= ?x441 0.0))))
(assert
 (let ((?x476 (+ (* (* 2.0 l_0_1_2) l_0_1_4) (* (* 2.0 l_0_1_3) l_0_1_5))))
 (let ((?x283 (- _a_0_)))
 (let ((?x482 (+ (+ (* ?x283 ?x476) (* (* 2.0 l_0_1_10) l_0_1_8)) (* (* 2.0 l_0_1_11) l_0_1_9))))
 (let ((?x488 (- (- ?x482 (* (* 2.0 l_0_1_14) l_0_1_16)) (* (* 2.0 l_0_1_15) l_0_1_17))))
 (= ?x488 0.0))))))
(assert
 (let ((?x523 (- (* (* (- _a_1_) l_0_1_1) l_0_1_1) (* (* (* 2.0 _a_3_) l_0_1_1) l_0_1_4))))
 (= ?x523 0.0)))
(assert
 (let ((?x476 (+ (* (* 2.0 l_0_1_2) l_0_1_4) (* (* 2.0 l_0_1_3) l_0_1_5))))
 (= (- (* (* (* (- 2.0) _a_1_) l_0_1_1) l_0_1_2) (* _a_3_ ?x476)) 0.0)))
(assert
 (let ((?x321 (* l_0_1_6 l_0_1_6)))
 (let ((?x322 (+ (+ (* l_0_1_4 l_0_1_4) (* l_0_1_5 l_0_1_5)) ?x321)))
 (let ((?x568 (- (* (* (* (- 2.0) _a_1_) l_0_1_1) l_0_1_4) (* (* _a_2_ l_0_1_1) l_0_1_1))))
 (= (- ?x568 (* _a_3_ ?x322)) 0.0)))))
(assert
 (let ((?x476 (+ (* (* 2.0 l_0_1_2) l_0_1_4) (* (* 2.0 l_0_1_3) l_0_1_5))))
 (let ((?x517 (- _a_1_)))
 (= (- (* ?x517 ?x476) (* (* (* 2.0 _a_2_) l_0_1_1) l_0_1_2)) 0.0))))
(assert
 (let ((?x321 (* l_0_1_6 l_0_1_6)))
 (let ((?x322 (+ (+ (* l_0_1_4 l_0_1_4) (* l_0_1_5 l_0_1_5)) ?x321)))
 (let ((?x517 (- _a_1_)))
 (= (- (* ?x517 ?x322) (* (* (* 2.0 _a_2_) l_0_1_1) l_0_1_4)) 0.0)))))
(assert
 (let ((?x476 (+ (* (* 2.0 l_0_1_2) l_0_1_4) (* (* 2.0 l_0_1_3) l_0_1_5))))
 (let ((?x637 (- _a_2_)))
 (= (* ?x637 ?x476) 0.0))))
(assert
 (let ((?x321 (* l_0_1_6 l_0_1_6)))
 (let ((?x322 (+ (+ (* l_0_1_4 l_0_1_4) (* l_0_1_5 l_0_1_5)) ?x321)))
 (let ((?x637 (- _a_2_)))
 (= (* ?x637 ?x322) 0.0)))))
(assert
 (= (* (* (- _a_3_) l_0_1_1) l_0_1_1) 0.0))
(assert
 (= (* (* (* (- 2.0) _a_3_) l_0_1_1) l_0_1_2) 0.0))
(assert
 (>= l_0_1_1 0.0))
(assert
 (>= l_0_1_3 0.0))
(assert
 (>= l_0_1_6 0.0))
(assert
 (>= l_0_1_7 0.0))
(assert
 (>= l_0_1_9 0.0))
(assert
 (>= l_0_1_12 0.0))
(assert
 (>= l_0_1_13 0.0))
(assert
 (>= l_0_1_15 0.0))
(assert
 (>= l_0_1_18 0.0))
(assert
 (let ((?x697 (* l_0_2_15 l_0_2_15)))
 (let ((?x695 (* l_0_2_14 l_0_2_14)))
 (let ((?x693 (* (/ 25897921.0 2500000000000000.0) _a_3_)))
 (let ((?x690 (* (/ 1.0 10000.0) _a_2_)))
 (let ((?x687 (* (/ 5089.0 5000000000.0) _a_1_)))
 (let ((?x685 (+ (* (- _a_0_) (+ (* l_0_2_2 l_0_2_2) (* l_0_2_3 l_0_2_3))) _a_0_)))
 (let ((?x701 (- (- (- (+ (+ (+ ?x685 ?x687) ?x690) ?x693) ?x695) ?x697) (* (* 1.0 l_0_2_8) l_0_2_8))))
 (= (- ?x701 (* (* 1.0 l_0_2_9) l_0_2_9)) 0.0)))))))))
(assert
 (let ((?x738 (* (/ 207280909786429.0 10000000000000000.0) _a_3_)))
 (let ((?x735 (* (/ 1036521.0 50000000.0) _a_2_)))
 (let ((?x732 (* (/ 12497251686731.0 12500000000000.0) _a_1_)))
 (let ((?x730 (- (* (* (* (- 2.0) _a_0_) l_0_2_1) l_0_2_4) (* _a_1_ (+ (* l_0_2_2 l_0_2_2) (* l_0_2_3 l_0_2_3))))))
 (let ((?x742 (- (+ (- (+ ?x730 ?x732) ?x735) ?x738) (* (* 2.0 l_0_2_10) l_0_2_7))))
 (= (- ?x742 (* (* 2.0 l_0_2_13) l_0_2_16)) 0.0)))))))
(assert
 (let ((?x809 (* l_0_2_18 l_0_2_18)))
 (let ((?x807 (* l_0_2_17 l_0_2_17)))
 (let ((?x805 (* l_0_2_16 l_0_2_16)))
 (let ((?x794 (* (/ 1112484251041.0 10000000000000000.0) _a_3_)))
 (let ((?x788 (* (/ 527621.0 50000000.0) _a_1_)))
 (let ((?x784 (* l_0_2_6 l_0_2_6)))
 (let ((?x785 (+ (+ (* l_0_2_4 l_0_2_4) (* l_0_2_5 l_0_2_5)) ?x784)))
 (let ((?x283 (- _a_0_)))
 (let ((?x791 (- (+ (* ?x283 ?x785) ?x788) (* _a_2_ (+ (* l_0_2_2 l_0_2_2) (* l_0_2_3 l_0_2_3))))))
 (let ((?x801 (- (- (+ (+ ?x791 _a_2_) ?x794) (* (* 1.0 l_0_2_10) l_0_2_10)) (* (* 1.0 l_0_2_11) l_0_2_11))))
 (let ((?x810 (- (- (- (- ?x801 (* (* 1.0 l_0_2_12) l_0_2_12)) ?x805) ?x807) ?x809)))
 (= ?x810 0.0)))))))))))))
(assert
 (let ((?x865 (* (/ 19404709641.0 50000000000000.0) _a_3_)))
 (let ((?x861 (+ (* (* 2.0 l_0_2_2) l_0_2_4) (* (* 2.0 l_0_2_3) l_0_2_5))))
 (let ((?x856 (* (/ 18721.0 1000000.0) _a_1_)))
 (= (+ (- ?x856 (* _a_2_ ?x861)) ?x865) 0.0)))))
(assert
 (let ((?x899 (* (/ 18721.0 500000.0) _a_2_)))
 (let ((?x893 (* (/ 51108943441.0 50000000000000.0) _a_1_)))
 (let ((?x861 (+ (* (* 2.0 l_0_2_2) l_0_2_4) (* (* 2.0 l_0_2_3) l_0_2_5))))
 (let ((?x517 (- _a_1_)))
 (let ((?x897 (- (- (* ?x517 ?x861) ?x893) (* (* (* 2.0 _a_2_) l_0_2_1) l_0_2_2))))
 (= (+ (- ?x897 ?x899) (* (/ 93562026018491.0 2500000000000000.0) _a_3_)) 0.0)))))))
(assert
 (let ((?x939 (* (/ 5274855369.0 2500000000000000.0) _a_3_)))
 (let ((?x936 (* (/ 1.0 50.0) _a_2_)))
 (let ((?x933 (* (/ 2054321.0 10000000000.0) _a_1_)))
 (let ((?x861 (+ (* (* 2.0 l_0_2_2) l_0_2_4) (* (* 2.0 l_0_2_3) l_0_2_5))))
 (let ((?x283 (- _a_0_)))
 (let ((?x942 (- (+ (+ (+ (* ?x283 ?x861) ?x933) ?x936) ?x939) (* (* 2.0 l_0_2_10) l_0_2_8))))
 (let ((?x948 (- (- ?x942 (* (* 2.0 l_0_2_11) l_0_2_9)) (* (* 2.0 l_0_2_14) l_0_2_16))))
 (= (- ?x948 (* (* 2.0 l_0_2_15) l_0_2_17)) 0.0)))))))))
(assert
 (let ((?x995 (* (/ 31698152009291.0 25000000000000000.0) _a_3_)))
 (let ((?x861 (+ (* (* 2.0 l_0_2_2) l_0_2_4) (* (* 2.0 l_0_2_3) l_0_2_5))))
 (let ((?x990 (* (/ 221771169.0 250000000000.0) _a_2_)))
 (let ((?x991 (+ (- (* (* (* (- 2.0) _a_1_) l_0_2_1) l_0_2_2) (* (/ 37409384775463.0 2000000000000000.0) _a_1_)) ?x990)))
 (= (- (- ?x991 (* _a_3_ ?x861)) ?x995) 0.0))))))
(assert
 (let ((?x1040 (* (/ 38758637278219.0 1250000000000000000.0) _a_3_)))
 (let ((?x1035 (* (/ 350475841.0 500000000000.0) _a_1_)))
 (let ((?x784 (* l_0_2_6 l_0_2_6)))
 (let ((?x785 (+ (+ (* l_0_2_4 l_0_2_4) (* l_0_2_5 l_0_2_5)) ?x784)))
 (let ((?x517 (- _a_1_)))
 (let ((?x1038 (- (- (* ?x517 ?x785) ?x1035) (* (* (* 2.0 _a_2_) l_0_2_1) l_0_2_4))))
 (= (- ?x1038 ?x1040) 0.0))))))))
(assert
 (let ((?x1083 (* (/ 700086027943143.0 1000000000000000000.0) _a_3_)))
 (let ((?x784 (* l_0_2_6 l_0_2_6)))
 (let ((?x785 (+ (+ (* l_0_2_4 l_0_2_4) (* l_0_2_5 l_0_2_5)) ?x784)))
 (let ((?x1078 (* (/ 350475841.0 1000000000000.0) _a_2_)))
 (let ((?x1076 (- (+ (* (* (* (- 2.0) _a_1_) l_0_2_1) l_0_2_4) (* (/ 14823540664547.0 500000000000000000.0) _a_1_)) (* (* _a_2_ l_0_2_1) l_0_2_1))))
 (= (- (- (+ ?x1076 ?x1078) (* _a_3_ ?x785)) ?x1083) 0.0)))))))
(assert
 (let ((?x1123 (* (/ 4736413.0 500000000000.0) _a_2_)))
 (let ((?x1124 (- (- (* (* (- _a_1_) l_0_2_1) l_0_2_1) (* (/ 104315317271.0 250000000000000000.0) _a_1_)) ?x1123)))
 (let ((?x1130 (+ (- ?x1124 (* (* (* 2.0 _a_3_) l_0_2_1) l_0_2_4)) (* (/ 47339458409133.0 2500000000000000000.0) _a_3_))))
 (= ?x1130 0.0)))))
(assert
 (let ((?x1162 (* (/ 40707679574001.0 200000000000000000.0) _a_3_)))
 (let ((?x1159 (* (/ 5089.0 25000000.0) _a_2_)))
 (let ((?x1160 (- (+ (* (* (* (- 2.0) _a_0_) l_0_2_1) l_0_2_2) (* (/ 124973785829.0 12500000000000.0) _a_1_)) ?x1159)))
 (let ((?x1168 (- (- (+ ?x1160 ?x1162) (* (* 2.0 l_0_2_13) l_0_2_14)) (* (* 2.0 l_0_2_7) l_0_2_8))))
 (= ?x1168 0.0))))))
(assert
 (let ((?x1207 (* l_0_2_13 l_0_2_13)))
 (let ((?x1205 (* (/ 12497347111777.0 12500000000000.0) _a_3_)))
 (let ((?x1200 (* (/ 27162921.0 250000000000.0) _a_2_)))
 (let ((?x1201 (+ (- (* (* (- _a_0_) l_0_2_1) l_0_2_1) (* (/ 50884213212401.0 5000000000000000.0) _a_1_)) ?x1200)))
 (let ((?x1203 (- ?x1201 (* _a_3_ (+ (* l_0_2_2 l_0_2_2) (* l_0_2_3 l_0_2_3))))))
 (= (- (- (+ ?x1203 ?x1205) ?x1207) (* (* 1.0 l_0_2_7) l_0_2_7)) 0.0)))))))
(assert
 (let ((?x1255 (* (/ 51495149512751.0 5000000000000000000.0) _a_3_)))
 (let ((?x1253 (- (- (* (/ 63230023432961.0 250000000000000000.0) _a_1_) (* (/ 1287517.0 250000000000.0) _a_2_)) (* (* (* 2.0 _a_3_) l_0_2_1) l_0_2_2))))
 (= (+ ?x1253 ?x1255) 0.0))))
(assert
 (let ((?x1281 (* (/ 127977891313853.0 1000000000000000000000.0) _a_3_)))
 (let ((?x1276 (* (/ 64009.0 1000000000000.0) _a_2_)))
 (let ((?x1274 (* (/ 977225403.0 500000000000000000.0) _a_1_)))
 (let ((?x1277 (+ ?x1274 ?x1276)))
 (= (- (- ?x1277 (* (* _a_3_ l_0_2_1) l_0_2_1)) ?x1281) 0.0))))))
(assert
 (= (+ (* (/ 6561258219361.0 1000000000000000000.0) _a_1_) (* (/ 6393154170117.0 8000000000000000000.0) _a_3_)) 0.0))
(assert
 (= (- (* (- (/ 266011163319.0 1000000000000000000.0)) _a_1_) (* (/ 180197214150431.0 10000000000000000000000.0) _a_3_)) 0.0))
(assert
 (= (+ (* (/ 3594937467.0 1000000000000000000.0) _a_1_) (* (/ 22343206019563.0 125000000000000000000000.0) _a_3_)) 0.0))
(assert
 (= (- (* (- (/ 16194277.0 1000000000000000000.0)) _a_1_) (* (/ 82412675653.0 125000000000000000000000.0) _a_3_)) 0.0))
(assert
 (let ((?x1337 (* (/ 350475841.0 1000000000000.0) _a_3_)))
 (let ((?x784 (* l_0_2_6 l_0_2_6)))
 (let ((?x785 (+ (+ (* l_0_2_4 l_0_2_4) (* l_0_2_5 l_0_2_5)) ?x784)))
 (let ((?x637 (- _a_2_)))
 (= (+ (* ?x637 ?x785) ?x1337) 0.0))))))
(assert
 (= (* (- (/ 6561258219361.0 500000000000000000.0)) _a_3_) 0.0))
(assert
 (= (* (/ 122833315124657.0 1000000000000000000000.0) _a_3_) 0.0))
(assert
 (= (* (- (/ 663999331799333.0 100000000000000000000000.0)) _a_3_) 0.0))
(assert
 (= (* (/ 67300824319707.0 500000000000000000000000.0) _a_3_) 0.0))
(assert
 (= (* (- (/ 303173059717.0 250000000000000000000000.0)) _a_3_) 0.0))
(assert
 (= (* (/ 4097152081.0 1000000000000000000000000.0) _a_3_) 0.0))
(assert
 (>= l_0_2_1 0.0))
(assert
 (>= l_0_2_3 0.0))
(assert
 (>= l_0_2_6 0.0))
(assert
 (>= l_0_2_7 0.0))
(assert
 (>= l_0_2_9 0.0))
(assert
 (>= l_0_2_12 0.0))
(assert
 (>= l_0_2_13 0.0))
(assert
 (>= l_0_2_15 0.0))
(assert
 (>= l_0_2_18 0.0))
(check-sat)
(get-model)